
### interface

In sbt-datatype 0.2.1 the `protocol` type, which generates abstract class, is renamed to `interface`.
It supports `methods` list as well as `fields`. [#14][14] by [@Duhemm][@Duhemm]/[#19][19] by [@eed3si9n][@eed3si9n]

### optional

Type can now be optional by adding `?` at the end:

    {
      "types": [{
        "name": "Greeting",
        "type": "record",
        "target": "Scala",
        "fields": [{
          "name": "message",
          "type": "string?"
        }]
      }]
    }

### JsonCodecPlugin

sbt-datatype 0.2.1 adds a new auto plugin `JsonCodecPlugin`, which generates JSON codec traits for [sjson-new][1].
Using the codecs, you can define a JSON protocol stack and convert the generated datatypes into JSON.

  [14]: https://github.com/sbt/sbt-datatype/pull/14
  [19]: https://github.com/sbt/sbt-datatype/pull/19
  [@eed3si9n]: https://github.com/eed3si9n
  [@jsuereth]: https://github.com/jsuereth
  [@dwijnand]: http://github.com/dwijnand
  [@Duhemm]: http://github.com/Duhemm
  [1]: https://github.com/eed3si9n/sjson-new
